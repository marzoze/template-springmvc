<?xml version="1.0"?>
<!-- ********************************************************************* -->
<!-- Ant build script for template-springmvc                               -->
<!-- History:         										               -->
<!-- Fathur : 19/11/2012 : Initial Version					               -->
<!-- ********************************************************************* -->

<project name="template-springmvc" default="dist" basedir=".">
	<description>template-springmvc</description>

	<property file="build.properties" />
	<property environment="env" />

	<property name="project.name" value="template-springmvc" />
	<property name="version" value="1.0" />
	<property name="warfile" value="${project.name}.war" />

	<property name="web.dir" value="WebContent" />
	<property name="build.dir" location="${web.dir}/WEB-INF" />
	<property name="dist.dir" location="dist" />
	<property name="project.libs" location="${build.dir}/lib" />
	<property name="src.dir" value="src" />
	<property name="classes.dir" value="${build.dir}/classes" />

	<path id="base.path">
		<fileset dir="${project.libs}">
			<include name="**/*.jar" />
		</fileset>		
	</path>

	<!-- Init -->
	<target name="init">
		<echo>Using JAVA_HOME=${java.home}</echo>
		<echo>server.home = ${server.home}</echo>
		<tstamp>
			<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
		</tstamp>

		<mkdir dir="${dist.dir}" />
		<mkdir dir="${classes.dir}" />
	</target>

	<!-- Clean -->
	<target name="clean" description="clean-up">
		<delete dir="${dist.dir}" />
		<delete dir="${classes.dir}" />
	</target>

	<!-- Compile -->
	<target name="compile" depends="init" description="Compiles the source code">
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.properties"/>
				<include name="**/*.xml"/>
			</fileset>
		</copy>	
		<javac debug="true" fork="true" memoryinitialsize="128M" memorymaximumsize="1024M" 
			   source="1.6"
		       target="1.6"
			   srcdir="${src.dir}"
		       destdir="${classes.dir}">
			<classpath>
				<path refid="base.path" />
			</classpath>
			<exclude name="**/*.properties"/>
			<exclude name="**/*.xml"/>
		</javac>

	</target>

	<!-- Dist -->
	<target name="dist" depends="clean,compile" description="Generates the distribution file">
		<delete file="${dist.dir}/${warfile}"/>
		<delete file="${dist.dir}/${srcfile}"/>


		<!-- war -->
		<war destfile="${dist.dir}/${warfile}" webxml="${web.dir}/WEB-INF/web.xml">
			<fileset dir="${web.dir}">
				<include name="css/**/*" />
				<include name="images/**/*" />
				<include name="js/**/*" />
				<include name="jsp/**/*" />
				<include name="ui/**/*" />
			</fileset>
			<webinf dir="${web.dir}/WEB-INF">
				<include name="*.xml" />
				<include name="*.properties" />
				<include name="taglib/**/*" />
				<include name="config/**/*" />
				<exclude name="web.xml" />
			</webinf>
			<lib dir="${project.libs}" />
			<classes dir="${classes.dir}" />
			<manifest>
				<attribute name="Implementation-Version" value="${version}" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="SVN-Revision" value="${env.SVN_REVISION}" />
			</manifest>
		</war>
	</target>

	<target name="deploy-local" depends="dist" description="Deploying to local server...">
		<echo>Deploying to local server...</echo>
		<copy file="${dist.dir}/${warfile}" todir="${server.home}/${server.deploydir}" verbose="true" />
		<echo>Deployed</echo>
	</target>

	<target name="backup" description="Backing Up War from Jboss Server" >
		<tstamp>
			<format property="TIMENOW" pattern="yyyyMMddHHmmss" />
		</tstamp>
		<scp file="${scp.userid}:${scp.password}@${scp.host}:${scp.deploydir}/${warfile}"
		localTodir="${backup.dir}/${env.BUILD_NUMBER}.${TIMENOW}"
		verbose="true" 
		sftp="true" 
		trust="true" 
		port="${scp.port}"/>
	</target>

	<target name="dist-share" depends="dist" description="Copy to shared folder...">
		<echo>Copying to shared folder...</echo>
		<copy file="${dist.dir}/${warfile}" todir="${pickup.folder}" verbose="true" />
		<echo>Copied</echo>
	</target>	

  	<target name="clean-compile" depends="clean,compile" description="Clean then compile">
	</target>

</project>
